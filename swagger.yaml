openapi: 3.0.0
info:
  title: E-invoice sending API
  version: 1.0.0
paths:
  /user/create:
    post:
      tags: 
        - user
      summary: creates new user
      description: |
        Creates a new user in the database and returns their user_id and a token for the current session.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: password123
      responses:
        200:
          description: user created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  user_id:
                    type: integer
                    example: 1
        400:
          description: no password provided
          
  /user/validate:
    post:
      tags: 
        - user
      summary: validates a user
      description: Validates a user by creating a new session for them.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                password:
                  type: string
                  example: password123
      responses:
        200:
          description: user validated
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        400:
          description: password is invalid
        
        403:
          description: user_id is invalid
                
  /user/invalidate:
    post: 
      tags:
        - user
      summary: invalidates a user
      description: Invalidates a userâ€™s current session.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      responses:
        200:
          description: user token is invalidated
          content:
            application/html:
              schema:
                type: object
        403:
          description: token is invalid
                
  /invoice/send/email:
    post:
      tags:
        - invoice
      summary: sends invoice as email
      description: Send an invoice in the form of email.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml_data:
                  type: string
                  example: |
                          <note>
                            <to>Tove</to>
                            <from>Jani</from>
                            <heading>Reminder</heading>
                            <body>Don't forget me this weekend!</body>
                          </note>
                email:
                  type: string
                  example: invoice.receiver@gmail.com
                subject:
                  type: string
                  example: invoice
                message:
                  type: string
                  example: here is your invoice
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      responses:
        200:
          description: email has been sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_id:
                    type: integer
                    example: 1
        400:
          description: incorrect email format
        403:
          description: token is invalid
  
  /invoice/send/sms:
    post:
      tags:
        - invoice
      summary: sends invoice as sms
      description: Send an invoice in the form of SMS.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xml_data:
                  type: string
                  example: |
                          <note>
                            <to>Tove</to>
                            <from>Jani</from>
                            <heading>Reminder</heading>
                            <body>Don't forget me this weekend!</body>
                          </note>
                number:
                  type: string
                  example: 61435395359
                message:
                  type: string
                  example: here is your invoice
                token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      responses:
        200:
          description: sms has been sent
          content:
            application/html:
              schema:
                type: object
                properties:
                  report_id:
                    type: integer
                    example: 1

        400:
          description: phone number not given
        403:
          description: token is invalid
  
  /report/generate/JSON:
    get:
      tags:
        - report
      summary: generates json communication report
      description: Generates communication report in JSON format.
      parameters:
        - in: query
          name: report_id
          description: report_id of report
          required: true
          schema:
            type: integer
        - in: query
          name: token
          description: token of user
          required: true
          schema:
            type: string
      
      responses:
        200:
          description: >-
            communication report generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
                  message_id:
                    type: integer
                    example: 2
                  date_sent:
                    type: string
                    example: 11/11/11
                  reciever:
                    type: string
                    example: real@email.com
                  status_code:
                    type: integer
                    example: 200
                  is_sent:
                    type: boolean
                    example: true
                  send_method: 
                    type: string
                    example: email
                  err_message:
                    type: string
                    example: Invalid email address
        400:
          description: >-
            token is invalid
  /report/generate/HTML:
    get:
      tags:
        - report
      summary: generates html communication report
      description: Generates communication report in HTML format.
      parameters:
        - in: query
          name: report_id
          description: report_id of report
          required: true
          schema:
            type: integer
        - in: query
          name: token
          description: token of user
          required: true
          schema:
            type: string
            
      responses:
        200:
          description: communication report generated
          content:
            application/html:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                    example: 1
                  message_id:
                    type: integer
                    example: 2
                  date_sent:
                    type: string
                    example: 11/11/11
                  reciever:
                    type: string
                    example: real@email.com
                  status_code:
                    type: integer
                    example: 200
                  is_sent:
                    type: boolean
                    example: true
                  send_method: 
                    type: string
                    example: email
                  err_message:
                    type: string
                    example: Invalid email address
        400:
          description: >-
            token is invalid
            
  /report/generate/PDF:
    get:
      tags:
        - report
      summary: generates pdf communication report
      description: Generates communication report in PDF format.
      parameters:
        - in: query
          name: report_id
          description: report_id of report
          required: true
          schema:
            type: integer
        - in: query
          name: token
          description: token of user
          required: true
          schema:
            type: string
            
      responses:
        200:
          description: >-
            communication report generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  report:
                    type: object
                    example: this is a pdf file
  /health/check:
    get:
      tags:
        - health
      summary: checks health of server
      description: Checks whether the server is running.
      responses:
        200:
          description: server is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_alive:
                    type: boolean
                    example: true
  /download/invoice/<id>:
    get:
      tags:
        - invoice
      summary: given invoice id sends invoice file
      description: Sends file of invoice to user.
      parameters:
        - in: query
          name: id
          description: invoice_id of invoice
          required: true
          schema:
            type: string
            
      responses:
        200:
          description: >-
            invoice file sent
components:
  schemas:
    user:
      type: object
      required:
        - user_id
        - password
      properties:
        user_id:
          type: integer
          example: 1
        password:
          type: string
          example: password123
        
    report:
      type: object
      properties:
        report_id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        time:
          type: string
          example: "2022-03-27 10:12:46.337654"
        reciever:
          type: string
          example: reciever.adr@gmail.com
        status_code:
          type: integer
          example: 200
        is_sent:
          type: boolean
          example: true
        send_method:
          type: string
          example: Email
        err_message:
          type: string
          example: email address was invalid
        
      xml:
        name: Category
    token:
      type: object
      properties:
        session_id:
          type: string
          example: e5f6c4ef-ed53-4885-8893-cd3ea3f7f2c8
        user_id:
          type: integer
          example: 1
        
    invoice:
      type: object
      properties:
        invoice_id:
          type: integer
          example: 1
        xml_data:
          type: string
          example: <note>\n  <to>Tove</to>\n  <from>Jani</from>\n  <heading>Reminder</heading>\n  <body>Don't forget me this weekend!</body>\n</note>\n
      
    
  

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/SE2Y22G24/e-invoice-sending/1.0.0
  - description: Deployed application
    url: https://e-invoice-sending-app.herokuapp.com
